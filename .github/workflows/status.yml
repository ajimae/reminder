name: "Build status check"
on:
  push:
    branch: [master]
  pull_request:
    types: [assigned, opened, synchronize, reopened]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
    - uses: actions/checkout@v1
      with:
        # Checkout the head ref instead of the PR branch that github creates.
        ref: ${{ github.head_ref }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install and build
      run: |
        npm install
    - name:
      run: | 
        node ./status/index.js
      env:
        RUN_ID: ${{ github.run_id }}
        GH_REPO: ${{ secrets.GH_REPO }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
    - name: wait for build
      uses: fountainhead/action-wait-for-check@v1.0.0
      id: wait-for-build
      with:
        # token: ${{ secrets.GH_TOKEN }}
        token: 'b3b09e0bcf9e19d4240f1f34031993153b6ed005'
        checkName: build
        ref: ${{ github.event.pull_request.head.sha || github.sha }}
    - name: Passing build
      if: steps.wait-for-build.outputs.conclusion == 'success'
      run: |
        echo "success"
      env:
        RUN_ID: ${{ github.run_id }}
        GH_REPO: ${{ secrets.GH_REPO }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Failing build
      if: steps.wait-for-build.outputs.conclusion == 'failure'
      run: |
        echo "failure"
      env:
        RUN_ID: ${{ github.run_id }}
        GH_REPO: ${{ secrets.GH_REPO }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}